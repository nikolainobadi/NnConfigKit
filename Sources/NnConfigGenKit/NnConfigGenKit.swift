// NnConfigGenKit.swift
// Generated by NnProjectGenerator on May 5, 2024

import Files
import Foundation

public enum NnConfigGen {
    public static func saveConfig<Config: NnConfig>(_ config: Config) throws {
        let configFilePath = ConfigPathFactory.configListPathSuffix
        let configFile = try Folder.home.createFileIfNeeded(at: configFilePath)
        let encoder = JSONEncoder.prettyOutput()
        let configData = try encoder.encode(config)
        
        try configFile.write(configData)
    }
    
    public static func loadConfig<Config: NnConfig>() throws -> Config {
        let configFilePath = ConfigPathFactory.makeProjectConfigFilePath(projectName: Config.projectName)
        let configFile = try File(path: configFilePath)
        let data = try configFile.read()
        let decoder = JSONDecoder()
        
        return try decoder.decode(Config.self, from: data)
    }
}


// MARK: - Dependencies
public protocol NnConfig: Codable {
    static var projectName: String { get }
}


// MARK: - Extension Dependencies
public extension JSONEncoder {
    static func prettyOutput() -> JSONEncoder {
        let encoder = JSONEncoder()
        encoder.outputFormatting = .prettyPrinted
        
        return encoder
    }
}
